--eRRO AMBIGUOS COMLUMMM
SELECT  ID_ESTADO,
        SG_ESTADO,
        NM_ESTADO,
        ID_CIDADE,
        ID_ESTADO ,
        NM_CIDADE,
        CD_IBGE,
        NR_DDD
FROM T_RHSTU_ESTADO ,
     T_RHSTU_CIDADE    
ORDER BY 1;


-- CORREÇÃO
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD
FROM T_RHSTU_ESTADO E,
     T_RHSTU_CIDADE C   
ORDER BY 1;

--JOIN (MEU PRIMEIRO JOIN)
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD
FROM T_RHSTU_ESTADO E INNER JOIN T_RHSTU_CIDADE C
ON(E.ID_ESTADO=C.ID_ESTADO)
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE;


--OPERADOR LEFT
-- ESTADO QUE NÃO TEM CIDADE CADASTRADA
--PADRAO SQL99 ANSI
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD
FROM T_RHSTU_ESTADO E LEFT JOIN T_RHSTU_CIDADE C
ON(E.ID_ESTADO=C.ID_ESTADO)
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE;


--PADRAO ORACLE
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD
FROM T_RHSTU_ESTADO E ,T_RHSTU_CIDADE C
WHERE(E.ID_ESTADO=C.ID_ESTADO)
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE;

--PADRAO ORACLE--LEFT
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD
FROM T_RHSTU_ESTADO E ,T_RHSTU_CIDADE C
WHERE(E.ID_ESTADO=C.ID_ESTADO(+))
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE;


--OPERADOR LEFT
-- ESTADO QUE NÃO TEM CIDADE CADASTRADA - EXIBIR SÓ ESTADO QUE NAO POSSUEM CIDADE
--PADRAO SQL99 ANSI
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD
FROM T_RHSTU_ESTADO E LEFT JOIN T_RHSTU_CIDADE C
ON(E.ID_ESTADO=C.ID_ESTADO)
WHERE C.ID_ESTADO IS NULL 
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE;


-- ADD TAB BAIRRO
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD,
        B.NM_BAIRRO,
        B.NM_ZONA_BAIRRO,
        L.NM_LOGRADOURO,
        L.NR_CEP,
        NR_LOGRADOURO,
        DS_COMPLEMENTO_NUMERO,
        DS_PONTO_REFERENCIA,
        DT_INICIO,
        DT_FIM,
        P.NM_PACIENTE,
        P.DT_NASCIMENTO,
        P.DS_ESTADO_CIVIL
FROM T_RHSTU_ESTADO E LEFT JOIN T_RHSTU_CIDADE C 
ON(E.ID_ESTADO=C.ID_ESTADO) 
LEFT JOIN T_RHSTU_BAIRRO B ON (C.ID_CIDADE=B.ID_CIDADE)
LEFT JOIN T_RHSTU_LOGRADOURO L ON (B.ID_BAIRRO=L.ID_BAIRRO)
LEFT JOIN T_RHSTU_ENDERECO_PACIENTE EP ON (L.ID_LOGRADOURO=EP.ID_LOGRADOURO)
LEFT JOIN T_RHSTU_PACIENTE P ON (EP.ID_PACIENTE=P.ID_PACIENTE)
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE,B.NM_BAIRRO,L.NM_LOGRADOURO;


-- TROCANDO PARA INNER
SELECT  E.ID_ESTADO,
        E.SG_ESTADO,
        E.NM_ESTADO,
        C.ID_CIDADE,
        C.ID_ESTADO ID_ESTADO_CIDADE,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD,
        B.NM_BAIRRO,
        B.NM_ZONA_BAIRRO,
        L.NM_LOGRADOURO,
        L.NR_CEP,
        NR_LOGRADOURO,
        DS_COMPLEMENTO_NUMERO,
        DS_PONTO_REFERENCIA,
        DT_INICIO,
        DT_FIM,
        P.NM_PACIENTE,
        P.DT_NASCIMENTO,
        P.DS_ESTADO_CIVIL
FROM T_RHSTU_ESTADO E INNER JOIN T_RHSTU_CIDADE C 
ON(E.ID_ESTADO=C.ID_ESTADO) 
INNER JOIN T_RHSTU_BAIRRO B ON (C.ID_CIDADE=B.ID_CIDADE)
INNER JOIN T_RHSTU_LOGRADOURO L ON (B.ID_BAIRRO=L.ID_BAIRRO)
INNER JOIN T_RHSTU_ENDERECO_PACIENTE EP ON (L.ID_LOGRADOURO=EP.ID_LOGRADOURO)
INNER JOIN T_RHSTU_PACIENTE P ON (EP.ID_PACIENTE=P.ID_PACIENTE)
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE,B.NM_BAIRRO,L.NM_LOGRADOURO;


-- TROCANDO PARA INNER -- TIRANDO OS ID'S E CRIANDO UMA VIEW
CREATE OR REPLACE VIEW V_RHSTU_DADOS_PACIENTE AS
SELECT  E.SG_ESTADO,
        E.NM_ESTADO,
        C.NM_CIDADE,
        C.CD_IBGE,
        C.NR_DDD,
        B.NM_BAIRRO,
        B.NM_ZONA_BAIRRO,
        L.NM_LOGRADOURO,
        L.NR_CEP,
        NR_LOGRADOURO,
        DS_COMPLEMENTO_NUMERO,
        DS_PONTO_REFERENCIA,
        DT_INICIO,
        DT_FIM,
        P.NM_PACIENTE,
        P.DT_NASCIMENTO,
        P.DS_ESTADO_CIVIL
FROM T_RHSTU_ESTADO E INNER JOIN T_RHSTU_CIDADE C 
ON(E.ID_ESTADO=C.ID_ESTADO) 
INNER JOIN T_RHSTU_BAIRRO B ON (C.ID_CIDADE=B.ID_CIDADE)
INNER JOIN T_RHSTU_LOGRADOURO L ON (B.ID_BAIRRO=L.ID_BAIRRO)
INNER JOIN T_RHSTU_ENDERECO_PACIENTE EP ON (L.ID_LOGRADOURO=EP.ID_LOGRADOURO)
INNER JOIN T_RHSTU_PACIENTE P ON (EP.ID_PACIENTE=P.ID_PACIENTE)
ORDER BY E.SG_ESTADO DESC , C.NM_CIDADE,B.NM_BAIRRO,L.NM_LOGRADOURO;

SELECT * FROM V_RHSTU_DADOS_PACIENTE; 

